Index is implemented in the storage engine layer, not in the server layer. So that indexing works differently in each engine, even for the same type of index.

B-Tree index (MyISAM, InnoDB)
values are stored in order
each leaf page is the same distance from the root
Query: searching for ranges of data, key prefix, full key value ( index on multiple columns, order matters)

Index-only query?


Hash index (memory storage engine)
use cases: lookup table in star schema


clustered index (innodb)
When a table has a clustered index, its rows are actually stored in the index’s leaf pages. The term “clustered” refers to the fact that rows with adjacent key values are stored close to each other.

only one per-table

secondary index (non-clustered)
Secondary (nonclustered) indexes can be larger than you might expect, because their leaf nodes contain the primary key columns of the referenced rows. Secondary index accesses require two index lookups instead of one.


covering index
An index that contains (or “covers”) all the data needed to satisfy a query is called a covering index.
